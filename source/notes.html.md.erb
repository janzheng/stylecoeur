---
layout: layout-main
title: notes
---

<div class="_grid-two-one">

<article class="_padding _width-content-max" markdown="1">

## Todos

THINGS TO BRING IN

- All products need to STAY SEMANTIC
  - stylecoeur bem rules


- decatursmiles
  - rando generator example
  - google forms gen + honeypot
    - js validator version -one of these is from circusshannon
    - simple version
  - google maps configurable drop-in widget
  - smooth scroll (+ circus shannon?)
    - extensible, better widget w/ versioning
  - scrollmagic example + embedded code
  - sticky nav example + embedded code

- webexperts
  - LOTS of components
  - scroller

- circusshannon
  - lity
  - componentize the gallery view 
  - ruby comments:


- janzheng
  - vsize calculator
  - rss feed inserter / generalize it w/ input, callback, etc.
  - portfolio cards look cool esp w/ background effect
  - clean up and standardize buttons
  - 

- popmenu
  - autohide side menu


- ALL PROJECTS NEED TO HAVE CHANGELOG / FEATURE LOGS 


- code parity w/ stylecoeur
  - copy code over, DO NOT SYMLINK

- stylecoeur changelog
  - every little thing needs to be changelogged after everything brought in
  - w/ versioning


Code Embed: 
  - like ux.mailchimp, have an embedded code window w/ max-height
  - proper code rendering
  - codepen examples?



Grids: 
- look at popular sites and recreate the top 20 popular layouts in grids
- create a new grids section for all those things, and share it online
  - mobile and desktop
- vertical grids w/lineheight, not perfect vgrids


Client Onboarding Process:
- Client acquisition questions
  - $ / size / etc.
- contract
- work orders
- invoices
- client notes + tracking


Design Process:
- Content, IA, Branding
- design goals, business goals, constraints
- accessibility + usability + human factors
  - where / how / who are using it
- track work + thoughts in progress, thoughts, screenshots, and how you got here
  - esp. w/ test-driven design
  - inputs + outputs
- BA-type work
  - wireframes
  - business requirements
  - component inputs + outputs (I/Os)


Other ideas to explore:
- Clearfix
- Progressive image loading
- Masonry
- scroll-fade-in-load effect (wordpress thing)
- tinyjpg
- google forms contact hack
- smooth scroll
- horizontal + vertical scroll
- ad block detect?
- menu: open, hiden, transition: https://www.skinn.be/en/work/salt
- menu slide down to hide; slide up to show: https://www.skinn.be/en/work/salt
- microservices and express api hookup
- page transition techniques

-- Vertical Tabs

[home] [design process] [functional] [styleguide] []

- design:
  - process
  - requirements

- functional 
  - implementation
  - test-driven components
    - design & development
    - inputs and outputs
  - react components
  - data model
  - api

- github update trick adding version: ?=v0.1

- middleman ruby resources for prototyping

- coding style and linting

- tools page
  - real time board
  - slack
  - tinyjpg
  - svgomg: https://jakearchibald.github.io/svgomg/
  - barbajs.org: page transitions
  - google forms email script
  - fluid typography: https://www.smashingmagazine.com/2016/05/fluid-typography/#controlling-the-rate-of-scale
  - stripe payments: https://stripe.com/elements
  - https://transfonter.org/

  on design + typography:
   - p 98 thinking with type: " style sheets compel designers to think globally and systematically instead of focusing on the fixed construction of a particular surface" - as opposed to 20th century artists and designers who integrated form and content; and "used typography to create texts whose content was inextricable from the concrete" layout of specific letterforms
   - don't fall into the trap of the modular adaptive system + distancing away from old typography
   - using js and/or css, getting deviceheight and devicewidth we can understand the limits of the screen
   - headlines subheads, and such can be precisely set based on the dimensions of the particular screen
   - responsive design with play with forms, alignment, space and meaning...


- adblock detection

- front-matter flags
  - page.show_footer
  - page.show_nav
  - page.transition
  - etc. applied to the page

- basic react pages, accounts pages, etc. use jststrt as a start
  - basic user stories and pages!
  - account, login, signup, password recovery, etc.


- stylecoeur for ux prototyping
  - site and relation map
  - page layout map / show all the pages, like invision or powerpoint edit mode
  - https://medium.com/proof-of-concept/growing-free-ux-design-tool-prototype-with-ui-wireframing-and-user-scenarios-f2b0015516ef


- functional design page
  - every project should have its own stylesheet page that includes all the design variations
  - a much simpler distillation of the "real" styleguide

</article>

<aside class="">
  <%= partial '/partials/changelog' %>
</aside>

</div>

