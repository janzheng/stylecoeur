---
layout: layout-nav
title: notes
---

<div class="_grid-two-one">

<article class="_padding _width-content-max" markdown="1">

## Todos



scroll-to-slide-up (spotify)


DESIGN SYSTEM

Reformat the Style guide and Design Systems pages with concepts from

- [design systems](https://medium.com/@marcintreder/design-systems-sprint-0-the-silver-bullet-of-product-development-8c0ed83bf00d)
- [MVDS](https://medium.com/@marcintreder/the-minimum-viable-design-system-75ca1806848a)
- [Design System language](https://medium.com/@marcintreder/design-systems-are-a-language-and-thats-changing-software-development-forever-ae914a197de)


THINGS TO BRING IN

- All products need to STAY SEMANTIC
  - stylecoeur bem rules

- janzheng
  - rss feed inserter / generalize it w/ input, callback, etc.
  
- Project Cheat Sheet
  - Github
  - Copy Stylecoeur
  - Readme + Changelog
  - Keeping Notes + Todo
  - Optional: styleguide 


- talk about Helpers, slightly-haphazard layout system



Grids: 
- look at popular sites and recreate the top 20 popular layouts in grids
- create a new grids section for all those things, and share it online
  - mobile and desktop
- vertical grids w/lineheight, not perfect vgrids




Client Onboarding Process:
- Client acquisition questions
  - $ / size / etc.
- contract
- work orders
- invoices
- client notes + tracking


Design Process:
- Content, IA, Branding
- design goals, business goals, constraints
- accessibility + usability + human factors
  - where / how / who are using it
- track work + thoughts in progress, thoughts, screenshots, and how you got here
  - esp. w/ test-driven design
  - inputs + outputs
- BA-type work
  - wireframes
  - business requirements
  - component inputs + outputs (I/Os)


Other ideas to explore:
- Progressive image loading
- Masonry
- scroll-fade-in-load effect (wordpress thing)
- tinyjpg
- google forms contact hack
- ad block detect?
- menu: open, hiden, transition: https://www.skinn.be/en/work/salt
- menu slide down to hide; slide up to show: https://www.skinn.be/en/work/salt
- microservices and express api hookup
- page transition techniques

- design:
  - process
  - requirements

- functional 
  - implementation
  - test-driven components
    - design & development
    - inputs and outputs
  - react components
  - data model
  - api


- Product
  - Business Product
  - Consumer Product

- middleman ruby resources for prototyping

Useful mixins
  - ease
  - highlight color
  - no select
  - other random stuff

  on design + typography:
   - p 98 thinking with type: " style sheets compel designers to think globally and systematically instead of focusing on the fixed construction of a particular surface" - as opposed to 20th century artists and designers who integrated form and content; and "used typography to create texts whose content was inextricable from the concrete" layout of specific letterforms
   - don't fall into the trap of the modular adaptive system + distancing away from old typography
   - using js and/or css, getting deviceheight and devicewidth we can understand the limits of the screen
   - headlines subheads, and such can be precisely set based on the dimensions of the particular screen
   - responsive design with play with forms, alignment, space and meaning...


- basic react pages, accounts pages, etc. use jststrt as a start
  - basic user stories and pages!
  - account, login, signup, password recovery, etc.


- stylecoeur for ux prototyping
  - site and relation map
  - page layout map / show all the pages, like invision or powerpoint edit mode
  - https://medium.com/proof-of-concept/growing-free-ux-design-tool-prototype-with-ui-wireframing-and-user-scenarios-f2b0015516ef


- functional design page
  - every project should have its own stylesheet page that includes all the design variations
  - a much simpler distillation of the "real" styleguide




### Future / Other Thoughts

- change name/branding to sassyPants??? Maybe v2
- stylecoeur style cards https://www.greatsimple.io/
- HTML / CSS grid versions for all their templates—sell them eventually
- manyways.design
  - many ways to skin a website
  - here’s css grids and react components (backed by stylecoeur)
  - lots of stuff for free, but also full access download / one time fee
- coding style and linting; enforcing syntax




</article>

<aside class="">
  <%= partial '/partials/changelog' %>
</aside>

</div>

