---
layout: layout-nav
title: Design System
---

<article class="_padding _width-content-max _center-margin" markdown="1">

## Design

Design / Research / DesignOps


** rename to StyleCore?

Nothing here yet but it's planned for the future. Here's a bunch of notes for right now.


#### Design Systems Handbook

[Design Systems handbook](https://www.designbetter.co/design-systems-handbook)

architecture/info arch/business requirements/planning phase:
  - sketching for thinking, IA
  - wireframes for communicating ideas

  - deliberately hide information
  - toggle-able wireframes
  - "sketchframes" "webframes"
  - https://blog.prototypr.io/why-you-shouldnt-skip-your-wireframing-1f7a70d5c125
  - "comp frames" — dribbble-pretty comps
  - as deliverables — ok if you have design system in place
    - save time, each component named correctly
    - develop new components needs more added info

- good starter / quotes for research and IA
https://uxplanet.org/get-professional-useful-habits-for-ux-designers-dceb1481e6ac

- "object-driven design" — https://uxplanet.org/how-to-save-ui-designers-front-end-developers-up-to-50-of-their-time-39a30254ec05
- "DRY" in design — don't repeat yourself
  - create once, apply everywhere
  - one source of truth
  - truth re-use
- bridge the design and development knowledge gap
  - use a single language for design specifications
    - in this case it's SASS
- *should designers code*?
  - they should share the same language as the developers
    - whether code, or their own spec language where everyone can always be on board
  - symbols in sketch
  - whatever
- single name for everything; single "dictionary" that make up that language
- cascading changes
  - change one place, change everywhere
  - breaking changes / testing for problems, alignment, etc.
- both designers and devs should think in terms of building blocks

- checklist for creating a new element / object
  - Establish reason/need for the element
    - are the needs solved in other, simpler ways?
  - Does it already exist?
  - can an existing one be re-used or modified? 
  - can existing modules be combined?

- macro design / business intentions / business-driven design vs. micro-design
  - when to do what
  - what's more important? 
  - always think of the big picture
  - ocd...

- informaiton hand-off between designer and developer
  - what is the fidelity of these designs? 
    - what are EXACT and need to be this EXACTLY?
    - what are approximations and the developer has freedom to do his own thing within the scope of design?
    - are there important reasons behind these design?
      - user research or feedback, or business-design goals
  - keep requirements and changes updated on both designer and dev side
    - 

Technical + Design + Change Debt = System Debt
- design notes
- comments
- reasons
- change debt
  - tracking changes
  - test changes (breaking changes?)
  - logging + commenting changes
- do work now, save time in future

- Ownership
  - who owns what? whose words count?

- design from information
- sketches / wireframes are the NARRATIVE of the information

- outline to style guide
  - color
  - typography
  - core screens
    - basic page IA — same regardless of what the site looks like
    - identify "main" screens: landing page, signup, price comparison, etc.
    - identify components on them, and design the components
    - nav, header, footer, buttons, charts, marketing areas
  - naming the objects / symbols
  - index the pages, objects, symbols for later

** stylecoeur: generalize a framework for ALL of this
  - style guide OF style guides
  - for wireframing, prototyping, and building new style guides


- design system-system
  - how to manage the design system
  - notes, logs, reducing debt
  - using github to track changes, diff

- continuous design cycle
  - brainstorm
  - establish / build
  - design review — what's new, what's changed; can be a meeting or just a document of changes
    - this is important because it emits the newest "version"
  - can all just be one person, but cycle still very important, to keep track of everything
    - reduce system debt

"Remember: However busy you are, working as fast as possible in the short-term will build up long-term technical debt."






---

{: ._color-border-ui}

### airBnB Notes

[airBnB Visual Styleguide](https://airbnb.design/building-a-visual-language/)

- one-off solutions: not inherently bad, but if they aren’t built upon a solid foundation, we eventually find ourselves having to pay back accrued technical and design debts.
- Design is about systems, and creating products in a scalable and repeatable way.
- A unified design system is essential to building better and faster; better because a cohesive experience is more easily understood by our users, and faster because it gives us a common language to work with.
- too few constraints - leads to disjointed user experiences 
- multiple designers and stakeholders - new solutions and styles causes divergence and incoherence
- multiple platforms - repeated work required to keep things synchronized
- software as a continuum - years-old code and designs will still stick around, even after product has shifted, requiring maintnenance and upgrades
- faster development: product engineers can focus more on writing the feature logic rather than the view code; share a common language w/ design
- patterns need to be fundamentally simple



#### airBnB Design Language System / Design Ops

- auditing and printing out many of our designs, both old and new; Laying the flows side by side on a board, we could see where and how the experiences were breaking and where we needed to start making changes
- Design Principles:
  - Unified: Each piece is part of a greater whole and should contribute positively to the system at scale. There should be no isolated features or outliers.
  - Universal: Airbnb is used around the world by a wide global community. Our products and visual language should be welcoming and accessible.
  - Iconic: We’re focused when it comes to both design and functionality. Our work should speak boldly and clearly to this focus.
  - Conversational: Our use of motion breathes life into our products, and allows us to communicate with users in easily understood ways.
- Foundation
  - typography
    - title 1 44/56, title 2 32/36, title 3 24/28, large 19/24, regular 17/22, small 14/18, micro 8/8
  - colors
    - accessibility (a11y) compliant w/ websafe scores
  - icons
  - spacing / grids
    - they use blocks of tiny:8 / small:16 / base:24/ large:48 / x-large:64 instead of baseline
  - information architecture 
- atoms and molecule guides opens door for disjointed experiences, difficult maintainability
  - redefine components w/ personality, not just rules; evolving ecosystem
  - end use of a component (e.g. avatar) can take on hundreds of permutations
  - each component and variations are diligently recorded in the library; some elements can be turned on / off depending on need
- library:
  - framework + library helps prototyping speed; based on needs
  - content component artboards like Navigation, Marquees, Content, Image and Speciality: group similar components
  - different sets for iOS, Android, and responsively adapted
  - simple layout concepts called Views for diff. devices: combined components, focuses on content and jobs to be done, rather than building components themselves
  - built on top of their own technical framework

<link href="../javascripts/scriptcoeur/plugins/lity/lity.min.css?" rel="stylesheet">
<script src="../javascripts/scriptcoeur/plugins/lity/lity.min.js" type="text/javascript"></script>

<img class="_img-full" src="https://airbnb.design/wp-content/uploads/2016/04/Organized-airbnb-dls-components-sample.png" data-lity />



##### Learnings

- Some patterns / subcomponents repeat often across many components; think about how these can be extracted into their own, w/ their own patterns (e.g. rows, table-cells)
- Sketch as a master component library is hard to maintain
- Documentation system - should be done soon, take into account design process/decisions, will help future decision-making and review
- 


#### [airBnB Design and Culture](https://airbnb.design/defining-product-design/)

- Fuse Engineering, Product and Design from the start: engineering, product and design teams are hitched and commonly referred to as EPD. By design, each function is involved and aligned from a product’s inception to its launch. For example, a working group for a new feature, product marketing or user feedback will involve at least one member from each of the three teams. This coalition not only assembles the key builders of the product, but, as a byproduct, it also formalizes the professional pathways that a person who wants to create a product can consider
- Design lead to focus design-work
- Grow designers w/ product and engineering hires; every project needs a designer to keep tabs on things / design responsibility
- Three elements define a product: the business, the code and the pixels. Give each a voice in all product decisions
  - Retention. In craft-based disciplines like design or engineering, you can allow people to continue to hone their core competency, rather than manage the development of others. Many people leave when this transition is forced, and there should be checkpoints for individual contributors who want to try on management.
  - Concurrent cohort growth. By allowing ICs to work on high-priority projects and make bigger decisions, they can keep advancing with their engineering and product counterparts, rather than be left to work on projects that don’t flex their full skill set. They can continue to build, bond and grow with their cross-functional peers.
  - Mobility. Level titles and on-the-job exposure facilitates more opportunities for expertise by osmosis — or the diffusion of knowledge — across functions. As a designer becomes more senior, she picks up more and different expertise from her engineering and product counterparts. With a greater working knowledge, designers have the option to move to “other legs of the stool” based on past projects, interest level and skill set.


[airBnB Copywriting](https://airbnb.design/words-shape-design-2//)

[Jobs to be Done](https://jtbd.info/)




## Content Strategy / Voice and Tone

https://airbnb.design/content-strategy-at-airbnb/
voiceandtone.com
- Our voice is the extension of our brand and personality within the product, and it’s the foundation of everything we write.
- In the end, we decided our voice is straightforward, inclusive, thoughtful, and spirited.






</article>



## Case Studies

[TripAdvisor](http://kelly-stevens.com/tripadvisor-redesign-navigation/)