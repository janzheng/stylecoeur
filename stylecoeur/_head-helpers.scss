


// 
//    Helper Utility Classes
// 


//    
//    ! use _neck-layout for semantic, contextual definitions 
// 

/*

Tip: this outputs
  .what
    margin-left: auto;
    margin-right: auto;

.what {
  margin: { 
      left: auto;
      right: auto;
  }
}

*/




// Site loader
// Fades page into view, hides FOUC
// --loaded can be attached using js and timer
// (used to be attached to body)
._loader {
  // hide ugly loader
  @extend %ease-slow;

  & > div {
    opacity: 0;
    top: 10px;
  }

  &.--circular {
    // inspired by http://tobiasahlin.com/spinkit/
    &:before {
      content: ' ';
      display: block;
      position: fixed;
      top: calc(50% - $size-p4/2);
      left: calc(50% - $size-p4/2);

      width: $size-p4;
      height: $size-p4;
      background-color: #333;
      opacity: 0.2;

      border-radius: 100%;
      display: inline-block;
      -webkit-animation: sk-bouncedelay 1.4s infinite ease-in-out both;
      animation: sk-bouncedelay 1.4s infinite ease-in-out both;
    }

    @-webkit-keyframes sk-bouncedelay {
      0%, 80%, 100% { -webkit-transform: scale(0) }
      40% { -webkit-transform: scale(1.0) }
    }

    @keyframes sk-bouncedelay {
      0%, 80%, 100% { 
        -webkit-transform: scale(0);
        transform: scale(0);
      } 40% { 
        -webkit-transform: scale(1.0);
        transform: scale(1.0);
      }
    }
  }

  &.--loaded {
    &:before, &:after {
      content: '';
      display: none;
    }
    div {
      @extend %ease-slow;
      opacity: 1;
      top: 0;
    }
  }
}



// 
//    IMAGE HELPERS
// 

._bg-img  {
            // use a local style to override this value
            // background-image: url('http://lorempixel.com/600/200/animals');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
          }

._bg-no_repeat      { background-repeat: no-repeat; }
._bg-cover          { background-size: cover; }
._bg-contain        { background-size: contain; }
._bg-center         { background-position: center; }
._bg-top            { background-position: top; }
._bg-right          { background-position: right; }
._bg-bottom         { background-position: bottom; }
._bg-left           { background-position: left; }

._bg-border_box  { background-clip: border-box; }
._bg-padding_box { background-clip: padding-box; }
._bg-content_box { background-clip: content-box; }

._bg-fixed          { background-attachment: fixed; }
._bg-local          { background-attachment: local; }
 
._img-fit-none       { object-fit: none; }
._img-fit-cover      { object-fit: cover; }
._img-fit-contain    { object-fit: contain; }
._img-fit-fill       { object-fit: fill; }
._img-fit-scale_down { object-fit: scale-down; }

._img-full { width: 100%; & > * {width: 100%} }



// 
//    INTERACTIVE
// 


// cursor events bubble through
// to objects underneath 
// good for z-index things like popups
._pointer-no_events {
  pointer-events: none;
}

._pointer {
  cursor: pointer;
}

._default {
  cursor: default;
  &.--i {
    cursor: default !important;
  }
}

._disabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
}

// prevents double click highlighting
// use on buttons and text CTAs
._select-none,
%user-select-none {
  -webkit-user-select: none; /* Chrome/Safari */        
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* IE10+ */

  /* Rules below not implemented in browsers yet */
  -o-user-select: none;
  user-select: none;
}

._scrollbar-hide,
%_scrollbar-hide,
._hide-scrollbar,
%hide-scrollbar {
  -ms-overflow-style: none;
  &::-webkit-scrollbar { 
    display: none; 
    width: 0px;
    height: 0px;
    background: transparent;
   }
}

._scroll-horizontal {
  overflow-x: scroll;
  overflow-y: hidden;
}

._scroll-vertical {
  overflow-x: hidden;
  overflow-y: scroll;
}

._overflow-hidden { overflow: hidden; }
._overflow-scroll { overflow: scroll; }
._overflow-auto   { overflow: auto; }








// 
//    DISPLAY 
// 

._hidden {
  display: none;

  &-i {
    display: none !important;
  }

  @include genGridAttr(('xs','sm','sm-down','md','lg')) {
    display: none;
  }
}

._block {
  display: block;

  @include genGridAttr(('xs','sm','sm-down','md','lg')) {
    display: block;
  }
}
._inline-block { display: inline-block; }
._inline { display: inline; }
._flex { display: flex; }
._inline_flex { display: inline-flex; }

._relative { position: relative; }
._absolute { position: absolute; }
._fixed    { position: fixed; }





// 
//    WIDTH
// 

._width-full,
._width-100 {
  width: 100%;
  max-width: 100%;
}

._height-full,
._height-100 {
  height: 100%;
}
//    Detailed width and height calculator in _design



// 
//    SPACING, MARGINS, PADDING
// 

%margin-section {
  margin: $size-base*3 auto;
}




/*
    Pattern

    _margin
    _margin-half
    _margin-none
    _margin-top
      _margin-top-i
      _margin-top-half
        _margin-top-half-i
      _margin-top-2
        _margin-top-2-i
    _margin-bottom
    _margin-left
    _margin-right

    modifier:
    -none
    -half
    -2
    -i
    -xs (only xs)
    -sm (sm and up)
    -md (md and up)
    -lg (lg and up)
*/

// helps build out repetitive margin and padding modifiers
/*

  ._margin {
    @include expanderer('margin');
  }

  results in _margin-i, _margin-half, _margin-half-i, etc.

*/

// combines grid w/ importantize; the name is legacy
@mixin importantizer($elements) {
  @include importantize($elements);
  // these don't really need !important
  // &-xs   { @include screen-xs-only { #{nth($elements, 1)}: #{nth($elements, 2)} } }
  // &-sm   { @include screen-sm { #{nth($elements, 1)}: #{nth($elements, 2)} } }
  @include genGridAttr(('xs','sm','md','lg')) {
    #{nth($elements, 1)}: #{nth($elements, 2)};
  }
};
@mixin expanderer($element) {
  @include importantizer($element $size-base);
  &-half { @include importantizer($element $size-half); }
  &-none { @include importantizer($element 0); }
  &-2    { @include importantizer($element $size-2); }
  &-3    { @include importantizer($element $size-p3); }
  &-4    { @include importantizer($element $size-p4); }
};


// 
//    MARGIN
// 
._margin { @include expanderer('margin'); }
._margin-top { @include expanderer('margin-top'); }
._margin-left { @include expanderer('margin-left'); }
._margin-right { @include expanderer('margin-right'); }
._margin-bottom { @include expanderer('margin-bottom'); }


// 
//    PADDING
// 
._padding { @include expanderer('padding'); }
._padding-top { @include expanderer('padding-top'); }
._padding-left { @include expanderer('padding-left'); }
._padding-right { @include expanderer('padding-right'); }
._padding-bottom { @include expanderer('padding-bottom'); }



// 
// 
//    ALIGNMENT 
// 
// 


._center {
  text-align: center;

  @include genGridAttr(('xs','sm','md','lg')) {
    text-align: center;
  }
}
  ._margin-center, 
  ._center-margin {
    // leave margin top/bot alone to prevent reset
    margin-left: auto;
    margin-right: auto;

    @include genGridAttr(('xs','sm','md','lg')) {
      margin-left: auto;
      margin-right: auto;
    }
  }

._left {
  text-align: left;

  @include genGridAttr(('xs','sm','md','lg')) {
    text-align: left;
  }
}
._right {
  text-align: right;

  @include genGridAttr(('xs','sm','md','lg')) {
    text-align: right;
  }
}

._justify {
  text-align: justify;

  @include genGridAttr(('xs','sm','md','lg')) {
    text-align: justify;
  }
}


//    Content Alignment
//    - can also use grid-based alignment from griddick

._v-text_top {
  vertical-align: text-top;
}
._v-top {
  vertical-align: top;
}
._v-middle {
  vertical-align: middle;
}
._v-bottom {
  vertical-align: bottom;
}


// Eliminates line breaks <br /> 
._break-none {
  br { 
    display: none;

    @include genGridAttr(('xs','sm','md','lg')) {
      display: none;
    }
  }
}





// 
//    FLOATS 
// 

._float-left {
  float: left;
}
._float-right {
  float: right;
}
._float-none {
  float: none;
}

._clear-both {
  clear: both;
}










// Sticky / Pinned Formatting
// - works with ScrollMagic

._pinned, .--pinned,
._sticky, .--sticky {
  padding-bottom: $size-base * 2;
  position: sticky;
  top: 0;
}
  // can't extend outside of media so...
  // this pins it only sm screens and up
  ._pinned-sm, .--pinned-sm,
  ._sticky-sm, .--sticky-sm {
    @include screen-sm { 
      // height: 100vh;
      padding-bottom: $size-base * 2;

      position: sticky;
      top: 0;
    }
  }






