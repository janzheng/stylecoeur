

// essential mixins

// usage @include prefix(transform,rotate(360deg));
@mixin prefixer($name, $arguments...) {
  -webkit-#{$name}: $arguments;
  -ms-#{$name}: $arguments;
  -moz-#{$name}: $arguments;
  -o-#{$name}: $arguments;
  #{$name}: $arguments;
}




// heart settings


$size-diff: 1px;                    // default: 0; in case weâ€™re not using base16, used for some edge cases / alignment
$size: 16px - $size-diff !default;  // 16px default; // based on 4*4
$sizeline: $size * 1.5 !default;    // baseline; base lineheight; line-heights follow 1.5 rule
$baseline: $sizeline;

// attempt at using "standardized" sizes. success may vary. (fonts are different sized, etc.)

// New: based on multiples of 4
// all sizes must be set RELATIVE to $size, in case it's not 16pxs!
$size-m4:       $size * 6/16     !default; // 6px
$size-m3:       $size * 8/16     !default; // 8px
$size-m2:       $size * 10/16    !default; // 10px
$size-m1:       $size * 12/16    !default; // 12px;  Minus Sizes [m]
$size-smaller:  $size * 14/16    !default; // 14px; dumb but super useful
$size-base:     $size            !default; // default is 16px
$size-larger:   $size * 20/16    !default; // 20px; hard choice; 20 div by 2,4,5 and halfway; 18 div by 3, 6, 9 
$size-p1:       $size * 24/16    !default; // 24px Plus Sizes [p]
$size-p2:       $size * 28/16    !default; // 28
$size-p3:       $size * 40/16    !default; // 40
$size-p4:       $size * 48/16    !default; // 48
$size-p5:       $size * 56/16    !default; // 56
$size-p6:       $size * 64/16    !default; // 64
$size-p7:       $size * 80/16    !default; // 80
$size-p8:       $size * 96/16    !default; // 96
$size-p9:       $size * 112/16   !default; // 112
$size-p10:      $size * 128/16   !default; // 128
$size-p11:      $size * 144/16   !default; // 144

$size-half:     $size/2 !default;
$size-2:        $size*2 !default;


/* Old: based on golden ratio
$size-m4:       4px;
$size-m3:       7px;
$size-m2:       9px;
$size-m1:       12px; // Minus Sizes [m]
$size-smaller:  14px; // dumb but super useful
$size-base:     $size; 
$size-larger:   19px; // dumb but super useful
$size-p1:       21px; // Plus Sizes [p]
$size-p2:       28px;
$size-p3:       37px;
$size-p4:       50px;
$size-p5:       67px;
$size-p6:       89px;
$size-p7:       119px;
$size-p8:       159px;

$size-half:     $size/2;
$size-2:        $size*2;
*/

// radius sizes
$radius-none: 0px       !default;  ._radius-none { border-radius: 0; } ._radius-none-i { border-radius: 0 !important; }
$radius: 4px            !default;       ._radius { border-radius: $radius }
$radius-md: $size-base  !default;  ._radius-md { border-radius: $radius-md }
$radius-lg: 24px        !default;   ._radius-lg { border-radius: $radius-lg }
$radius-xl: 36px        !default;   ._radius-xl { border-radius: $radius-xl }
$radius-sm: 2px         !default;    ._radius-sm { border-radius: $radius-sm }// subtle borders; nothing should be a jagged 90 degrees
$gutter: $size-base/2   !default;


// these are just the bootstrap defaults converted to my own vars

// xs 0   - 767
// sm 768 - 991
// md 992 - 1199
// lg 1200 + 

// b/c of pixel density, these descriptions are just for ease of describing width
// shouldn't matter what devices people use

// "mobile"
$width-xs-min: 0px      !default; 
$width-xs-max: 767px    !default;

// "tablet"
$width-sm-min: 768px    !default;
$width-sm-max: 991px    !default;

// "desktop"
$width-md-min: 992px    !default;
$width-md-max: 1199px   !default;

// "wide"
$width-lg-min: 1200px   !default;
$width-lg-max: 2100px   !default;


// Helper Widths
$width-site-min: 360px  !default; // absolute minimum site width

// sometimes sites have a 'magical' breakpoint based on content structure
$width-magic: 640px     !default;

$width-content-max: $width-sm-max !default; // max content block width
$width-content-max-narrow: $width-magic !default; // max content block width

$width-content-paragraph: 77ch !default;
$width-content-paragraph-narrow: 55ch !default;
// adheres to the 75 ch per paragraph rule; ch uses the '0' symbol as char width



// layout widths defined in _neck-layout



