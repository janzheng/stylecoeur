---
title: Grid &amp; Layout
type: styleguide
layout: layout-coeur-knowbase
name: grid-layout
section: fundamental
source: ../
reference: _head-griddick.scss
submenu:
  - [Introduction, introduction]
  - [Breakpoints, breakpoints]
  - [Responsive Grid, responsive-grid]
  - [Grid Patterns, grid-patterns]
  - [Grid Helpers, grid-helpers]
---


<main markdown="1">

## Grid &amp; Layout System

### Introduction

The grid and page layout "system" is a collection of CSS grid-driven helper classes that make layouts work. Here are the main files:

- [`_head-helpers`](https://github.com/janzheng/stylecoeur/blob/master/styles/_head-helpers.scss) —  basic layout helpers like display, padding, margin, float, pinned, clear and other helpers
- [`_head-screen`](https://github.com/janzheng/stylecoeur/blob/master/styles/_head-screen.scss) — responsive screen sizing, and show/hide classes
- [`_head-griddick`](https://github.com/janzheng/stylecoeur/blob/master/styles/_head-griddick.scss) — CSS grids and flexbox classes
- [`_neck-layout`](https://github.com/janzheng/stylecoeur/blob/master/styles/_neck-layout.scss) — semantic and contextual classes for general layout and styling


Get some more ideas from here: [https://builttoadapt.io/flexbox-is-easy-efc84738521a](https://builttoadapt.io/flexbox-is-easy-efc84738521a)
{: ._message .--warning }

#### Things to keep in mind

- Don't forget that if a component has `margin-bottom` and the next component has `margin-top`, the two margins will collapse
- In mobile and smaller screens, grids collapse into a single column, unless forced with the `-xs` append.  
- The layout system makes extensive use of CSS Grids: only modern browsers are supported, and no fallbacks or polyfills have been written.
- For Grids tips, use [CSS-Tricks](https://css-tricks.com/snippets/css/complete-guide-grid/) or [Learn CSS Grid](http://learncssgrid.com/) or [Grid by Example](https://gridbyexample.com/examples/).


#### Keeping Code Semantic

When developing larger projects, try to use semantic contextual names. This means that `sidebar` is more readable than `_grid-col-2 _padding-top _padding-right` — semantic and contextual class and variable names make your code easier to keep up.

Wrap up more complex layouts into layout classes like `_layout-coeur-main-sidebar`, and extend grid classes and helpers from a stylesheet file for this layout; use html styling helpers like `_padding` sparingly in production—use those to quickly test out variations, but quickly move onto using `@extends` in your semantic classes instead.

Some layout helpers can help you get started. These don't include horizontal padding in case of full-width images or such, but those are easily included.

- `._container` — container to space out componetns vertically
- `._container-large` — large vertical container
- `._content` — vertical/horizontal content container
- `._content-xs` — vertical/horizontal content container only for xs screens 


<div class="_styleguide-example">
  <div class="_container _color-bg-white">
    <div class="_font-small">._container</div>
  </div>
  <div class="_container-large _color-bg-white _margin-top">
    <div class="_font-small">._container-large</div>

    <div class="_content _color-bg-ui _margin-top">
      <div class="_font-small">._content</div>
    </div>
    <div class="_content-xs _color-bg-ui _margin-top">
      <div class="_font-small">._content-xs</div>
    </div>

    <div class="_width-content-max _color-bg-ui _margin-top _center-margin">
      <div class="_font-small">._width-content-max</div>
    </div>
    <div class="_width-content-max-narrow _color-bg-ui _margin-top _center-margin">
      <div class="_font-small">._width-content-max-narrow</div>
    </div>

    <div class="_width-content-paragraph _color-bg-ui _margin-top _center-margin">
      <div class="">._width-content-paragraph — approximates the 75ch rule</div>
      <div>0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-</div>
    </div>

    <div class="_width-content-paragraph-narrow _color-bg-ui _margin-top _center-margin">
      <div class="">._width-content-paragraph-narrow — approximates the 75ch rule</div>
      <div>0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-</div>
    </div>
  </div>
</div>
~~~html
<div class="_container _color-bg-white">
  <div class="_font-small">._container</div>
</div>
<div class="_container-large _color-bg-white _margin-top">
  <div class="_font-small">._container-large</div>

  <div class="_content _color-bg-ui _margin-top">
    <div class="_font-small">._content</div>
  </div>
  <div class="_content-xs _color-bg-ui _margin-top">
    <div class="_font-small">._content-xs</div>
  </div>

  <div class="_width-content-max _color-bg-ui _margin-top _center-margin">
    <div class="_font-small">._width-content-max</div>
  </div>
  <div class="_width-content-max-narrow _color-bg-ui _margin-top _center-margin">
    <div class="_font-small">._width-content-max-narrow</div>
  </div>

  <div class="_width-content-paragraph _color-bg-ui _margin-top _center-margin">
    <div class="">._width-content-paragraph — approximates the 75ch rule</div>
    <div>0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-</div>
  </div>

  <div class="_width-content-paragraph-narrow _color-bg-ui _margin-top _center-margin">
    <div class="">._width-content-paragraph-narrow — approximates the 75ch rule</div>
    <div>0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-0123456789-</div>
  </div>
</div>
~~~





### Breakpoints

The responsive grid is setup with the screen sizes from Bootstrap. The responsive grid helpers are defined in `_head-screen`

- `$width-xs-min` to `-max`: 0px to 767px
- `$width-sm-min` to `-max`: 768px to 991px
- `$width-md-min` to `-max`: 992px to 1199px
- `$width-lg-min` to `-max`: 1200px to 2100px

#### CSS Variable Helpers

- `$width-site-min`: 360px — default absolute min. width
- `$width-magic`: 640px — sometimes sites have a 'magical' breakpoint based on content structure
- `$width-content-max`: 991px - useful for marketing pages
- `$width-content-max-narrow: $width-magic` — useful for shorter paragraph blocks
- `$width-content-paragraph: 85ch` — adheres to the 75 ch per paragraph rule; ch uses the '0' symbol as char width

#### Responsive Visibility Helpers

These helpers can easily show/hide content depending on screen size.




**Hide content** at the breakpoint and at, above or below, with `display: none`:

<div class="_styleguide-example">

  <div class="_hidden-mobile _card --simple">._hidden-mobile</div>
  <div class="_hidden-tablet-and-down _card --simple">._hidden-tablet-and-down</div>
  <div class="_hidden-desktop _card --simple">._hidden-desktop</div>
  
</div>
~~~

Hides content: 
._hidden-mobile
._hidden-tablet
._hidden-tablet-and-down
._hidden-tablet-and-up
._hidden-desktop
._hidden-desktop-and-down
._hidden-desktop-and-up
._hidden-large
._hidden-magic-down
._hidden-magic-up
~~~


**Show content** at the breakpoint and at, above or below, with `display: inherit` :

<div class="_styleguide-example">

  <div class="_show-mobile _card --simple">._show-mobile</div>
  <div class="_show-tablet-and-down _card --simple">._show-tablet-and-down</div>
  <div class="_show-desktop _card --simple">._show-desktop</div>

</div>
~~~

Show content: 
._show-mobile
._show-tablet
._show-tablet-and-down
._show-tablet-and-up
._show-desktop
._show-desktop-and-down
._show-desktop-and-up
._show-large
._show-magic-down
._show-magic-up

~~~



#### Mixin Helpers

The basic mixins that allow for responsive conditions.

~~~
  @include screen-xs-only {
    // affect xs screens
  }
  // @include screen-xs does the same as above

  @include screen-magic-down {
    // affect screens under magic breakpoint
  }
  @include screen-magic-up {
    // affect screens above magic breakpoint
  }
  @include screen-sm {
    // affect screens at sm and bigger 
  }
    @include screen-sm-down {
      // affect screens sm and smaller
    }
    @include screen-sm-only {
      // only affect screens sm
    }
  @include screen-md {
    // affect screens at md and bigger 
  }
    @include screen-md-down {
      // affect screens md and smaller
    }
    @include screen-md-only {
      // only affect screens md
    }
  @include screen-lg {
    // affect screens at lg 
  }


~~~


### Responsive Grid

These are just some examples of grid layouts. Please refer to `_head-griddick` for the rest, and feel free to add any missing layouts.

<div class="_styleguide-example">
  <h5>Equal column grid system</h5>

  <div class=" _grid-cols-1">
    <div class="_grid-block _color-bg-white">_grid-cols-1</div>
  </div>
  <div class="_grid-cols-2 _margin-top">
    <div class="_grid-block _color-bg-white">_grid-cols-2</div>
    <div class="_grid-block _color-bg-white _margin-top-xs">_grid-cols-2</div>
  </div>

  <div class="_grid-cols-2-xs _margin-top">
    <div class="_grid-block _color-bg-white">_grid-cols-2-xs</div>
    <div class="_grid-block _color-bg-white">_grid-cols-2-xs</div>
  </div>

  <div class="_grid-cols-3 _margin-top">
    <div class="_grid-block _color-bg-white">_grid-cols-3</div>
    <div class="_grid-block _color-bg-white">_grid-cols-3</div>
    <div class="_grid-block _color-bg-white">_grid-cols-3</div>
  </div>

  <div class="_grid-cols-12-xs _margin-top">
    <div class=" _color-bg-white">12</div>
    <div class=" _color-bg-white">12</div>
    <div class=" _color-bg-white">12</div>
    <div class=" _color-bg-white">12</div>
    <div class=" _color-bg-white">12</div>
    <div class=" _color-bg-white">12</div>
    <div class=" _color-bg-white">12</div>
    <div class=" _color-bg-white">12</div>
    <div class=" _color-bg-white">12</div>
    <div class=" _color-bg-white">12</div>
    <div class=" _color-bg-white">12</div>
    <div class=" _color-bg-white">12</div>
  </div>

  <h5 class="_margin-top">Flexible column templates</h5>

  <div class="_grid-1-2 _margin-top">
    <div class="_grid-block _color-bg-white">_grid-1-2</div>
    <div class="_grid-block _color-bg-white"></div>
  </div>
  <div class="_grid-2-1 _margin-top">
    <div class="_grid-block _color-bg-white">_grid-2-1</div>
    <div class="_grid-block _color-bg-white"></div>
  </div>

  <div class="_grid-1-3 _margin-top">
    <div class="_grid-block _color-bg-white">_grid-1-3</div>
    <div class="_grid-block _color-bg-white"></div>
  </div>
  <div class="_grid-3-1 _margin-top">
    <div class="_grid-block _color-bg-white">_grid-3-1</div>
    <div class="_grid-block _color-bg-white"></div>
  </div>

  <div class="_grid-5-3-xs _margin-top">
    <div class="_grid-block _color-bg-white">_grid-5-3-xs</div>
    <div class="_grid-block _color-bg-white"></div>
  </div>

  <div class="_grid-1-2-2 _margin-top">
    <div class="_grid-block _color-bg-white">_grid-1-2-2</div>
    <div class="_grid-block _color-bg-white"></div>
    <div class="_grid-block _color-bg-white"></div>
  </div>

  <div class="_grid-1-2-1 _margin-top">
    <div class="_grid-block _color-bg-white">_grid-1-2-1</div>
    <div class="_grid-block _color-bg-white"></div>
    <div class="_grid-block _color-bg-white"></div>
  </div>

  <div class="_grid-2-2-1 _margin-top">
    <div class="_grid-block _color-bg-white">_grid-2-2-1</div>
    <div class="_grid-block _color-bg-white"></div>
    <div class="_grid-block _color-bg-white"></div>
  </div>

  <div class="_grid-2-1-1 _margin-top">
    <div class="_grid-block _color-bg-white">_grid-2-1-1</div>
    <div class="_grid-block _color-bg-white"></div>
    <div class="_grid-block _color-bg-white"></div>
  </div>

  <div class="_grid-1-6-1 _margin-top">
    <div class="_grid-block _color-bg-white">_grid-1-6-1</div>
    <div class="_grid-block _color-bg-white"></div>
    <div class="_grid-block _color-bg-white"></div>
  </div>

  <div class="_grid-3-3-1 _margin-top">
    <div class="_grid-block _color-bg-white">_grid-3-3-1</div>
    <div class="_grid-block _color-bg-white"></div>
    <div class="_grid-block _color-bg-white"></div>
  </div>

  <div class="_grid-1-3-3 _margin-top">
    <div class="_grid-block _color-bg-white">_grid-1-3-3</div>
    <div class="_grid-block _color-bg-white"></div>
    <div class="_grid-block _color-bg-white"></div>
  </div>
</div>



~~~html
<h5>Equal column grid system</h5>

<div class=" _grid-cols-1">
  <div class="_grid-block _color-bg-white">_grid-cols-1</div>
</div>
<div class="_grid-cols-2 _margin-top">
  <div class="_grid-block _color-bg-white">_grid-cols-2</div>
  <div class="_grid-block _color-bg-white _margin-top-xs">_grid-cols-2</div>
</div>

<div class="_grid-cols-2-xs _margin-top">
  <div class="_grid-block _color-bg-white">_grid-cols-2-xs</div>
  <div class="_grid-block _color-bg-white">_grid-cols-2-xs</div>
</div>

<div class="_grid-cols-3 _margin-top">
  <div class="_grid-block _color-bg-white">_grid-cols-3</div>
  <div class="_grid-block _color-bg-white">_grid-cols-3</div>
  <div class="_grid-block _color-bg-white">_grid-cols-3</div>
</div>

<div class="_grid-cols-12-xs _margin-top">
  <div class=" _color-bg-white">12</div>
  <div class=" _color-bg-white">12</div>
  <div class=" _color-bg-white">12</div>
  <div class=" _color-bg-white">12</div>
  <div class=" _color-bg-white">12</div>
  <div class=" _color-bg-white">12</div>
  <div class=" _color-bg-white">12</div>
  <div class=" _color-bg-white">12</div>
  <div class=" _color-bg-white">12</div>
  <div class=" _color-bg-white">12</div>
  <div class=" _color-bg-white">12</div>
  <div class=" _color-bg-white">12</div>
</div>

<h5 class="_margin-top">Flexible column templates</h5>

<div class="_grid-1-2 _margin-top">
  <div class="_grid-block _color-bg-white">_grid-1-2</div>
  <div class="_grid-block _color-bg-white"></div>
</div>
<div class="_grid-2-1 _margin-top">
  <div class="_grid-block _color-bg-white">_grid-2-1</div>
  <div class="_grid-block _color-bg-white"></div>
</div>

<div class="_grid-1-3 _margin-top">
  <div class="_grid-block _color-bg-white">_grid-1-3</div>
  <div class="_grid-block _color-bg-white"></div>
</div>

<div class="_grid-5-3-xs _margin-top">
  <div class="_grid-block _color-bg-white">_grid-5-3-xs</div>
  <div class="_grid-block _color-bg-white"></div>
</div>

<div class="_grid-1-2-2 _margin-top">
  <div class="_grid-block _color-bg-white">_grid-1-2-2</div>
  <div class="_grid-block _color-bg-white"></div>
  <div class="_grid-block _color-bg-white"></div>
</div>

<div class="_grid-1-2-1 _margin-top">
  <div class="_grid-block _color-bg-white">_grid-1-2-1</div>
  <div class="_grid-block _color-bg-white"></div>
  <div class="_grid-block _color-bg-white"></div>
</div>

<div class="_grid-2-2-1 _margin-top">
  <div class="_grid-block _color-bg-white">_grid-2-2-1</div>
  <div class="_grid-block _color-bg-white"></div>
  <div class="_grid-block _color-bg-white"></div>
</div>

<div class="_grid-2-1-1 _margin-top">
  <div class="_grid-block _color-bg-white">_grid-2-1-1</div>
  <div class="_grid-block _color-bg-white"></div>
  <div class="_grid-block _color-bg-white"></div>
</div>

<div class="_grid-1-6-1 _margin-top">
  <div class="_grid-block _color-bg-white">_grid-1-6-1</div>
  <div class="_grid-block _color-bg-white"></div>
  <div class="_grid-block _color-bg-white"></div>
</div>

<div class="_grid-3-3-1 _margin-top">
  <div class="_grid-block _color-bg-white">_grid-3-3-1</div>
  <div class="_grid-block _color-bg-white"></div>
  <div class="_grid-block _color-bg-white"></div>
</div>

<div class="_grid-1-3-3 _margin-top">
  <div class="_grid-block _color-bg-white">_grid-1-3-3</div>
  <div class="_grid-block _color-bg-white"></div>
  <div class="_grid-block _color-bg-white"></div>
</div>
~~~















### Grid Patterns

Grid patterns are popular shortcut layouts. These could be misused and make your site super-generic, so use with caution. Refer to `_head-griddick#patterns` for more information

- `grid-row-start` is used to reflow content in mobile view so that images will always appear above the content.



##### Image &amp; Content

Side by side content and image, ideal for alternating on marketing pages. Image reflows to display above content on `xs` screens.

<div class="_styleguide-example">

  <div class="_layout-content-image ">
    <div class="">
      Some unbearable content here
    </div>
    <div class="_grid_item-overflow">
      <img width="100%" src="http://placebear.com/300/200">
    </div>
  </div>

  <div class="_layout-image-content">
    <div class="_grid_item-overflow">
      <img width="100%" src="http://placebear.com/300/200">
    </div>
    <div class="">
      Some unbearable content here
    </div>
  </div>

</div>
~~~html
<div class="_layout-content-image ">
  <div class="">
    Some unbearable content here
  </div>
  <div class="_grid_item-overflow">
    <img width="100%" src="http://placebear.com/300/200">
  </div>
</div>

<div class="_layout-image-content">
  <div class="_grid_item-overflow">
    <img width="100%" src="http://placebear.com/300/200">
  </div>
  <div class="">
    Some unbearable content here
  </div>
</div>
~~~


















### Grid Helpers

Grid helpers like help simplify CSS Grids implementation and expose grid functionality to HTML. They can be kind of confusing, so here are a few illustrative examples. 

Refer to the bottom of `_head-griddick.scss#helpers` for all the helpers

. For example, `_align-center` exists to vertically align elements on a row. Again, please check the `_griddick.scss` file for the various helper options.


<div class="_styleguide-example">


  <div class="_styleguide-example-block">
  <h6>Alignment</h6>

  <p class="_font-small">Note that horizontal and vertical alignment are completely independent</p>

  <div class="_styleguide-example-sub _grid-cols-3">
    <div class="_align-left _grid-block _color-bg-white">._align-left</div>
    <div class="_align-horizontally _grid-block _color-bg-white">._align-horizontally</div>
    <div class="_align-right _grid-block _color-bg-white">._align-right</div>

    <div class="_align-top _vh-20 _grid-block _color-bg-white">._align-top</div>
    <div class="_align-vertically _vh-20 _grid-block _color-bg-white">._align-vertically</div>
    <div class="_align-bottom _vh-20 _grid-block _color-bg-white">._align-bottom</div>

    <div class="_align-top _align-right _vh-20 _grid-block _color-bg-white">._align-top <br/>._align-right</div>
    <div class="_align-vertically _align-horizontally _align-right _vh-20 _grid-block _color-bg-white">._align-vertically <br/>._align-horizontally</div>
    <div class="_align-bottom _align-left _vh-20 _grid-block _color-bg-white">._align-bottom <br/>._align-left</div>


  </div>
  </div>

  <!-- contain the overflow example -->
  
  <div class="_styleguide-example-block _grid_item-overflow-scroll">

  <h6>Overflow</h6>
  
  <div class="_font-small">._grid_item-overflow <br/>— grids can't be smaller than the size of its contents, and sometimes may break a grid if used for layout. This forces overflow to behave. <a href="https://gridbyexample.com/examples/example37/">auto-fit here</a></div>
  <div class="_styleguide-example-sub _grid-repeater-fit">
    <div>block one</div>
    <div>blocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwo</div>
    <div>block three</div>
  </div>
  <div class="_font-small">with _grid_item-overflow — by default overflow is hidden</div>
  <div class="_styleguide-example-sub _grid-repeater-fit">
    <div>block one</div>
    <div class="_grid_item-overflow">blocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwo</div>
    <div>block three</div>
  </div>
  <div class="_font-small">with _grid_item-overflow-scroll</div>
  <div class="_styleguide-example-sub _grid-repeater-fit">
    <div>block one</div>
    <div class="_grid_item-overflow-scroll">blocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwoblocktwo</div>
    <div>block three</div>
  </div>
  </div>

  <div class="_styleguide-example-block">
  <h6>Repeaters</h6>
  <div class="_font-small">._grid-repeater</div>
  <div class="_styleguide-example-sub _grid-repeater">
    <div>block one</div>
    <div>block two</div>
    <div>block three</div>
  </div>

  <div class="_font-small">._grid-repeater-small</div>
  <div class="_styleguide-example-sub _grid-repeater-small">
    <div>block one</div>
    <div>block two</div>
    <div>block three</div>
    <div>block four</div>
  </div>

  <div class="_font-small">._grid-repeater-fit <br/>— uses auto-fit so the grid blocks will take up all the space as to not leave white-space, when only one row <a href="https://gridbyexample.com/examples/example37/">auto-fit here</a></div>
  <div class="_styleguide-example-sub _grid-repeater-fit">
    <div>block one</div>
    <div>block two</div>
    <div>block three</div>
  </div>
  </div>


</div>

</main>


